一、awk流程控制
1、if分支结构
--格式:  awk '{if(条件){编辑指令}else{编辑指令2}...}'  文件
            前置命令  |  awk '{if(条件){编辑指令}else{编辑指令2}...}' 
--例:
   统计/etc/passwd文件中登录Shell是“/bin/bash”的用户个数：
 ]# awk -F: '{if($7~/bash$/){i++}}END{print i}'  /etc/passwd   // "~": 匹配

   分别统计/etc/passwd文件中登录Shell是“/bin/bash”和不是“/bin/bash”的用户个数：
 ]# awk -F: '{if($7~/bash$/){i++}else{j++}} END{print i,j}' /etc/passwd

2、多条件组合(&&、||)
  输出UID或GID为0的用户名 :
 ]# awk -F: '$3==0||$4==0{print $1}' /etc/passwd    // 此时$3==0 等价于 ${UID}  ==  0
  
   输出100以内既能被3整除又能被13整除的数 的个数:
 ]# seq 99 | awk '$1%3==0&&$1%13==0{print $1;i++}END{print i}'

   输出100以内能被7整除或包含7的数 :
 ]# seq 99 | awk '$1%7||$1~7{print $1}' 
   
二、awk数组
--定义格式：数组名[下标]=元素值   (可以使用字符串，字符串需要使用双引号)
--例 :  a[0]=12  spa[1]="ooxx"  aa["xh"]="fd"

--调用格式：数组名[下标]
--例 : 
 ]# awk 'BEGIN{a[0]=11;a[1]=88;print a[1],a[0]}'
   88 11

--遍历用法：for(变量 in 数组名){print 数组名[变量]}
--例 : 
 ]# awk 'BEGIN{a[0]=0;a[1]=11;a[2]=22; for(i in a){print i,a[i]}}'
   0  0
   1  11
   2  22
 ]# awk 'BEGIN{sap["xh"]="oo";sap["xl"]="xx";sap["zs"]="ooxx";for (i in sap)print i,sap[i]}'
 zs ooxx
 xh oo
 xl xx                                         
 ]# awk '... print "i=",i,"sap[i]=",sap[i]}'
 i= zs sap[i]= ooxx
 i= xh sap[i]= oo
 i= xl sap[i]= xx
--应用 :
  分析Web日志的访问量排名，要求获得客户机的地址、访问次数，并且按照访问次数排名 :
 ]# awk  '{ip[$1]++} END{for(i in ip) {print i,ip[i]}}' /var/log/httpd/access_log | sort -nr  //-n表示升序，-r表示反序

三、案例分析
1、统计占用内存最多的程序 
  ]# ps -eo %mem,%cpu,ucmd | awk '{a[$3]+=$2}END{for (i in a)print a[i],i}' | sort -n          //统计程序的占用内存 
  ]# ps aux | grep bash   //查找占用内存最高程序
  ]# kill -9 PID         
    统计占用CPU最多的程序
  ]# ps -eo %mem,%cpu,ucmd | awk '{a[$3]+=$1}END{for(i in a)print a[i],i}'| sort -n    //以程序名作为数组下标

2、编写脚本，防止远程ssh暴力破解密码，具体监控项目要求如下：
     检测ssh登录日志，如果远程登陆账号名错误3次，则屏蔽远程主机的IP
     检测ssh登录日志，如果远程登陆密码错误3次，则屏蔽远程主机的IP
  ]# vim /opt/test2.sh     
  #!bin/bash
  awk '/Failed password/{print $11}' /var/log/secure | awk '{a[$1]+ +}END{for(i in a)print a[i],i}' | awk '$1>3{print $2}'
  awk '/Invalid user/{print $10}' /var/log/secure | awk '{b[$1]++}END{for(j in b)print b[j],j}'| awk '$1>3{print $2}'
3、编写脚本，实现计算机各个性能数据监控的功能，具体监控项目要求如下：
  CPU负载
    网卡流量
    内存剩余容量
    磁盘剩余容量
    计算机账户数量
    当前登录账户数量
    计算机当前开启的进程数量
    本机已安装的软件包数量
 ]# cat /opt/test.sh 
 #!/bin/bash
 cpu=`uptime | awk '{print $NF}'` 
 echo "CPU负载情况:" $cpu
 netin=`ifconfig eth0 | awk '/RX p/{print $(NF-2)}'`
 echo "网卡流量:" $netin
 mem=`free -h | awk '/Mem/{print $4}'` 
 echo "内存剩余容量:" $mem
 dis=`df -h | awk '$NF=="/"{print $(NF-2)}'`
 echo "磁盘剩余容量:" $dis
 user=`awk '{print $1}' /etc/passwd | wc -l`
 echo "计算机账户数量:" $user 
 login=`who | wc -l`
 echo "当前登录账户数量:" $login
 pro=`ps aux | awk 'BEGIN{k=0}{k++}END{print k}'`
 echo "当前开启进程数量:" $pro
 rp=`rpm -qa |wc -l`
 echo "已安装软件包数量:" $rp


  






























