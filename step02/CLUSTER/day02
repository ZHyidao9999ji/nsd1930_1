keepalived(VRRP协议)
1.VRRPshixian)VIP
2.自动配置LVS,健康检查
为实现高可用集群,监控服务器节点状态,防止单点故障

案例1：Keepalived高可用服务器
1.设置Web1,web2服务器网络参数、配置Web服务
2.安装Keepalived软件(两台Web服务器做相同的操作)
[root@web1 ~]# yum install -y keepalived
[root@web2 ~]# yum install -y keepalived 
3.部署Keepalived服务
web1:
[root@web1 ~]# vim /etc/keepalived/keepalived.conf
    global_defs {
      notification_email {
        admin@tarena.com.cn                //设置报警收件人邮箱
      }
      notification_email_from ka@localhost    //设置发件人
      smtp_server 127.0.0.1                //定义邮件服务器
      smtp_connect_timeout 30
      router_id  web1                        //设置路由ID号（实验需要修改）
    }
    vrrp_instance VI_1 {
      state MASTER                         //主服务器为MASTER（备服务器需要修改为BACKUP）
      interface eth0                    //定义网络接口
      virtual_router_id 51                //主备服务器VRID号必须一致
      priority 100                     //服务器优先级,优先级高优先获取VIP（实验需要修改）
      advert_int 1
      authentication {
        auth_type pass
        auth_pass 1111                       //主备服务器密码必须一致
      }
      virtual_ipaddress {                   //谁是主服务器谁获得该VIP（实验需要修改）
    192.168.4.80 
    }    
    }
[root@web1 ~]# systemctl start keepalived
[root@web1 ~]# iptables -F
[root@web1 ~]# setenforce 0
[root@web1 ~]# ip addr show

web2:
[root@web2 ~]# vim /etc/keepalived/keepalived.conf
    global_defs {
      notification_email {
        admin@tarena.com.cn                //设置报警收件人邮箱
      }
      notification_email_from ka@localhost    //设置发件人
      smtp_server 127.0.0.1                //定义邮件服务器
      smtp_connect_timeout 30
      router_id  web2                        //设置路由ID号（实验需要修改）
    }
    vrrp_instance VI_1 {
      state BACKUP                             //备服务器为BACKUP（实验需要修改）
      interface eth0                        //定义网络接口
      virtual_router_id 51                    //主辅VRID号必须一致
      priority 50                             //服务器优先级（实验需要修改）
      advert_int 1
      authentication {
         auth_type pass
         auth_pass 1111                       //主辅服务器密码必须一致
      }
      virtual_ipaddress {                 //谁是主服务器谁配置VIP（实验需要修改）
    192.168.4.80 
     }   
    }
[root@web2 ~]# systemctl start keepalived  //需要先关闭web1的keepalived服务,待web1启动成功后,再重启web2的服务
[root@web2 ~]# iptables -F
[root@web2 ~]# setenforce 0   
[root@web2 ~]# ip addr show


 案例2：Keepalived+LVS服务器
两台web网络环境配置与前面实验一样
两台LVS调度器执行相同的操作
[root@LVS2 ~]# yum install -y ipvsadm
[root@LVS2 ~]# yum install -y keepalived
[root@LVS2 ~]# systemctl enable keepalived
[root@LVS2 ~]# vim /etc/keepalived/keepalived.conf
    global_defs {
      notification_email {
        admin@tarena.com.cn                //设置报警收件人邮箱
      }
      notification_email_from ka@localhost    //设置发件人
      smtp_server 127.0.0.1                //定义邮件服务器
      smtp_connect_timeout 30
      router_id  lvs1                        //设置路由ID号(实验需要修改)
    }
    vrrp_instance VI_1 {
      state MASTER                             //主服务器为MASTER
      interface eth0                        //定义网络接口
      virtual_router_id 50                    //主辅VRID号必须一致
      priority 100                         //服务器优先级
      advert_int 1
      authentication {
        auth_type pass
        auth_pass 1111                       //主辅服务器密码必须一致
      }
      virtual_ipaddress {                   //配置VIP（实验需要修改）
    192.168.4.15 
     }   
    }
    virtual_server 192.168.4.15 80 {           //设置ipvsadm的VIP规则（实验需要修改）
      delay_loop 6
      lb_algo wrr                          //设置LVS调度算法为WRR
      lb_kind DR                               //设置LVS的模式为DR
      #persistence_timeout 50
    #注意这样的作用是保持连接，开启后，客户端在一定时间内始终访问相同服务器
      protocol TCP
      real_server 192.168.4.100 80 {         //设置后端web服务器真实IP（实验需要修改）
        weight 1                             //设置权重为1
        TCP_CHECK {                            //对后台real_server做健康检查
        connect_timeout 3
        nb_get_retry 3
        delay_before_retry 3
        }
      }
     real_server 192.168.4.200 80 {       //设置后端web服务器真实IP（实验需要修改）
        weight 2                          //设置权重为2
        TCP_CHECK {
        connect_timeout 3
        nb_get_retry 3
        delay_before_retry 3
        }
      }
    }
[root@LVS2 ~]# systemctl start keepalived
[root@LVS1 ~]# iptables -F 
[root@LVS1 ~]# setenforce  0
[root@LVS2 ~]# ipvsadm -Ln                     #查看LVS规则
[root@LVS2 ~]# ip a  s                          #查看VIP配置
客户端client使用curl命令反复连接http://192.168.4.15

案例3：配置HAProxy负载平衡集群
[root@web1 ~]# ifdown eth0
[root@web1 ~]# ifdown lo:0
[root@web1 ~]# nmcli connection modify eth1 ipv4.method manual \
ipv4.addresses 192.168.2.100/24 connection.autoconnect yes
[root@web1 ~]# nmcli connection up eth1
[root@web2 ~]# ifdown eth0
[root@web2 ~]# ifdown lo:0
[root@web2 ~]# nmcli connection modify eth1 ipv4.method manual \
ipv4.addresses 192.168.2.200/24 connection.autoconnect yes
[root@web2 ~]# nmcli connection up eth1
[root@haproxy ~]# yum -y install haproxy
[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg
listen stats 0.0.0.0:1080   #监听端口
    stats refresh 30s   #统计页面自动刷新时间
    stats uri /stats   #统计页面url
    stats realm Haproxy Manager #进入管理解面查看状态信息
    stats auth admin:admin  #统计页面用户名和密码设置
  #stats hide-version   #隐藏统计页面上HAProxy的版本信息
listen  websrv-rewrite 0.0.0.0:80
   balance roundrobin
   server  web1 192.168.2.100:80 check inter 2000 rise 2 fall 5
   server  web2 192.168.2.200:80 check inter 2000 rise 2 fall 5




































