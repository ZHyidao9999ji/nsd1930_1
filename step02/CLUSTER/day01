集群
1.核心技术 : 任务调度
2.分类 : 高性能计算集群, 负载均衡集群, 高可用集群
高性能计算集群HPC：通过以集群开发的并行应用程序，解决复杂的科学问题。
负载均衡（LB）集群：客户端访问负载可以在计算机集群中尽可能平均地分摊处理。
高可用（HA）集群：当集群中的一个系统发生故障时，集群软件迅速做出反应，将该系统的任务分配到集群中其它正在工作的系统上执行。

3.性能 : nginx < LVS
   功能 : nginx > LVS

4.LVS工作模式 :
NAT：通过网络地址转换实现的虚拟服务器。Director将用户请求报文的目的地址改成选定的Real Server地址后，转发给Real Server。大并发访问时，调度器的性能成为瓶颈
DR：直接使用路由技术实现虚拟服务器。通过改写请求报文的MAC地址，将请求发至Real Server，Real Server直接响应客户端
TUN：通过隧道方式实现虚拟服务器。Director采用隧道技术将请求发至Real Server后，Real Server直接响应客户端
5.LVS负载平衡的调度算法
轮询（Round Robin） rr
加权轮询（Weighted Round Robin） wrr
最少连接（Least Connections） lc
加权最少连接（ Weighted Least Connections ） wlc

案例1：ipvsadm命令用法
1.使用命令增、删、改LVS集群规则
-A -D -E : 增加、删除、修改虚拟服务器
-a -d -e : 增加、删除、修改真实服务器
-s [rr|wrr|lc|wlc] : 指定集群算法
-m -i -g : NAT 、隧道   、直连 工作模式
-t  -u  : tcp协议   udp协议
[root@proxy ~]# yum -y install ipvsadm
[root@proxy ~]# ipvsadm -A -t 192.168.4.5:80 -s wrr    //创建LVS虚拟集群服务器（算法为加权轮询：wrr）
[root@proxy ~]# ipvsadm -a -t 192.168.4.5:80 -r 192.168.2.100 -m -w 1   //为集群添加若干real server
[root@proxy ~]# ipvsadm -a -t 192.168.4.5:80 -r 192.168.2.200 -m -w 2   // -w:权重  
[root@proxy ~]# ipvsadm –a -t 192.168.4.5:80 -r 192.168.2.201 -m -w 3
[root@proxy ~]# ipvsadm –a -t 192.168.4.5:80 -r 192.168.2.202 -m -w 4
[root@proxy ~]# ipvsadm -E -t 192.168.4.5:80 -s rr  //修改调度器算法，将加权轮询修改为轮询
[root@proxy ~]# ipvsadm -Ln   //查看LVS规则
[root@proxy ~]# ipvsadm-save -n > /etc/sysconfig/ipvsadm  //永久保存所有规则
[root@proxy ~]# ipvsadm -C  //清空所有规则

案例2：部署LVS-NAT集群
1.为web1 web2 配置web服务器(httpd)
2.部署LVS-NAT模式调度器
[root@proxy ~]# echo 1 > /proc/sys/net/ipv4/ip_forward   //开启路由转发功能
[root@proxy ~]# echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf   //修改配置文件，设置永久规则
[root@proxy ~]# ss -ntulp | grep :80
[root@proxy ~]# ipvsadm -A -t 192.168.4.5:80 -s wrr
[root@proxy ~]# ipvsadm -a -t 192.168.4.5:80 -r 192.168.2.100 -m
[root@proxy ~]# ipvsadm -a -t 192.168.4.5:80 -r 192.168.2.200 -m
用client测试
[root@client ~]# curl http://192.168.4.5

 案例3：部署LVS-DR集群
1）设置Proxy代理服务器的VIP和DIP
[root@proxy ~]# cd /etc/sysconfig/network-scripts/
[root@proxy network-scripts]# cp ifcfg-eth0  ifcfg-eth0:0  //辅助IP   
[root@proxy network-scripts]# ls ifcfg-eth*
ifcfg-eth0  ifcfg-eth0:0  ifcfg-eth1  ifcfg-eth2  ifcfg-eth3
[root@proxy ~]# vim ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=none
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.4.5
PREFIX=24
[root@proxy ~]# vim ifcfg-eth0:0
TYPE=Ethernet
BOOTPROTO=none
DEFROUTE=yes
NAME=eth0:0
DEVICE=eth0:0
ONBOOT=yes
IPADDR=192.168.4.15
PREFIX=24
[root@proxy network-scripts]# systemctl restart  network   //需要重启多次
2）设置Web服务器网络参数   
web1与web2做以下同样的操作
####################################################
[root@web1 ~]# cd /etc/sysconfig/network-scripts/
[root@web1 ~]# cp ifcfg-lo{,:0}
[root@web1 ~]# vim ifcfg-lo:0
DEVICE=lo:0
IPADDR=192.168.4.15
NETMASK=255.255.255.255
NETWORK=192.168.4.15
BROADCAST=192.168.4.15
ONBOOT=yes
NAME=lo:0
[root@web1 ~]# nmcli connection modify eth0 ipv4.method manual ipv4.addresses 192.168.4.100/24 connection.autoconnect yes
[root@web1 ~]# nmcli connection up eth0
[root@web1 ~]# cd /etc/sysconfig/network-scripts/
[root@web1 ~]# cp ifcfg-lo{,:0}
[root@web1 ~]# vim ifcfg-lo:0
DEVICE=lo:0
IPADDR=192.168.4.15
NETMASK=255.255.255.255
NETWORK=192.168.4.15
BROADCAST=192.168.4.15
ONBOOT=yes
NAME=lo:0
[root@web1 ~]# vim /etc/sysctl.conf
net.ipv4.conf.all.arp_ignore = 1  #当有arp广播问谁是192.168.4.15时，本机忽略该ARP广播，不做任何回应
net.ipv4.conf.lo.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2  #本机不要向外宣告自己的lo回环地址是192.168.4.15
net.ipv4.conf.all.arp_announce = 2
[root@web1 ~]# sysctl -p
[root@web2 ~]# systemctl restart network
##########################################################
3) proxy调度器安装软件并部署LVS-DR模式调度器
装包ipvsadm,并清理之前实验的规则，创建新的集群服务器规则，添加真实服务器
[root@proxy ~]# ipvsadm -C   
[root@proxy ~]# ipvsadm -A -t 192.168.4.15:80 -s wrr
[root@proxy ~]# ipvsadm -a -t 192.168.4.15:80 -r 192.168.4.100 
[root@proxy ~]# ipvsadm -a -t 192.168.4.15:80 -r 192.168.4.200 -w 2
[root@proxy ~]# ipvsadm-save -n > /etc/sysconfig/ipvsadm
用client测试 
[root@client ~]# curl http://192.168.4.15












