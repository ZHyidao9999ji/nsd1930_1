案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	    rht-vmctl  reset  desktop
######################################################



案例1:指定yum软件源
为 server0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装httpd与vsftpd
– 利用rpm命令检测是否安装成功
[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo
[root@server0 ~]# yum repolist
[root@server0 ~]# yum -y install httpd
[root@server0 ~]# yum -y install vsftpd
[root@server0 ~]# rpm -q httpd
[root@server0 ~]# rpm -q vsftpd

案例2：虚拟机Server上操作
  1. 新建目录结构/nsd1903/test
  2. 在目录/nsd1903/test创建文件1903.txt并写入内容 NSD  Student
  3. 将/nsd1903/test/1903.txt文件复制到/root目录下，同时 改名为 tedu.txt
  4. 将/etc/passwd 、/etc/resolv.conf、/etc/hosts 同时拷贝到/nsd1903/test/目录下
  5. 将文件 /nsd1903/test/hosts 重改名为 hs.txt 
  6. 创建目录结构/boot/kernel
  7. 将目录 /boot内容中以 vm 开头的 复制到/boot/kernel目录下 
[root@server0 ~]# mkdir -p /nsd1093/test
[root@server0 ~]# echo NSD Student > /nsd1093/test/1903.txt
[root@server0 ~]# cp /nsd1093/test/1903.txt /root/tedu.txt
[root@server0 ~]# cp  /etc/passwd /etc/resolv.conf /etc/hosts /nsd1093/test/
[root@server0 ~]# mv /nsd1093/test/hosts /nsd1093/test/hs.txt
[root@server0 ~]# mkdir -p /boot/kerenl
[root@server0 ~]# cp /boot/vm* /boot/kerenl


案例5:虚拟机 server0上操作，查找并处理文件
 – 创建目录/root/findfiles/
 – 利用find查找所有用户 student 拥有的必须是文件,把它们拷贝到 /root/findfiles/ 文件夹中
 – 利用find查找/boot目录下大于10M并且必须是文件，拷贝到/opt
 – 利用find查找/boot/ 目录下以 vm 开头且必须是文件，拷贝到/opt
 – 利用find查找/boot/ 目录下为快捷方式
 – 利用find查找/etc 目录下，以 tab 作为结尾的 必须是文件
[root@server0 ~]# mkdir -p /root/findfiles
[root@server0 ~]# find / -user student -type f -exec cp {} /root/findfiles/ \;
[root@server0 ~]# find /boot -size +10M -type f -exec cp {} /opt \;
[root@server0 ~]# find /boot -name "vm*" -exec cp {} /opt/ \; 
[root@server0 ~]# find /boot/ -type l
[root@server0 ~]# find /etc/ -name "*tab" -type f


案例6:虚拟机 server0上操作,查找并提取文件内容
    1.在文件 /usr/share/dict/words 中查找到所有包含字符串 seismic 的行,将输出信息,写入到/opt/nsd18.txt
    2.查看内核版本，将显示结果重定向到/root/version.txt
    3.查看红帽系统版本，将显示结果追加到/root/version.txt
    4.查看主机名将显示结果追加到/root/version.txt
    5.将/etc/fstab文件中以UUID开头的信息，写入到/root/fstab.txt
    6.提取/etc/passwd以bash结尾的行，将其信息写入/opt/pass.txt
    7.复制/etc/login.defs文件到当前目录下，改名为init.txt
    8.提取init.txt文件里的有效配置（去除以#号开头，去除空行），保存为init2.txt
[root@server0 ~]# grep seismic /usr/share/dict/words > /opt/nsd18.txt
[root@server0 ~]# uname -r > /root/version.txt
[root@server0 ~]# cat /etc/redhat-release  >> /root/version.txt 
[root@server0 ~]# hostname >> /root/version.txt
[root@server0 ~]# grep ^UUID /etc/fstab > /root/fstab.txt
[root@server0 ~]# grep bash$ /etc/passwd > /vtxt
[root@server0 ~]# cp /etc/login.defs /etc/init.txt
[root@server0 ~]# grep -v ^$ /etc/init.txt | grep -v ^# > /etc/init2.txt



案例7:在server上操作,（MBR分区模式）规划分区
 添加一块60G的硬盘并规划分区：
   划分2个10G的主分区；1个12G的主分区;1个10G的逻辑分区。
[root@server0 ~]# fdisk /dev/vdc
[root@server0 ~]# partprobe
[root@server0 ~]# lsblk

案例6:虚拟机 server0操作，构建 LVM 存储

– 新建一个名为 systemvg 的卷组 
– 在此卷组中创建一个名为 vo 的逻辑卷，大小为8G 
– 将逻辑卷 vo 格式化为 xfs 文件系统 
– 将逻辑卷 vo 挂载到 /vo 目录，并在此目录下建立一个测试文件 votest.txt，内容为“I AM KING.” 
– 实现逻辑卷vo开机自动挂载到/vo
[root@server0 ~]# vgcreate systemvg /dev/vdc1
[root@server0 ~]# lvcreate -n vo  -L 8G systemvg 
[root@server0 ~]# mkfs.xfs /dev/systemvg/vo
[root@server0 ~]# mkdir /vo
[root@server0 ~]# echo I AM KING > /vo/votest.txt
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# mount -a
[root@server0 ~]# df -h

案例7:虚拟机 server0操作，构建 LVM 存储(修改PE大小)
– 新的逻辑卷命名为 database，其大小为50个PE的大小，属于 datastore 卷组 
– 在 datastore 卷组中其PE的大小为1M
– 使用 EXT4 文件系统对逻辑卷 database 格式化，此逻辑卷应该在开机时自动挂载到 /mnt/database 目录
[root@server0 ~]# vgcreate -s 1M datastore /dev/vdc2
[root@server0 ~]# lvcreate -n database  -l 50 datastore
[root@server0 ~]# mkfs.xfs /dev/datastore/database 
[root@server0 ~]# mkdir -p /mnt/database
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# mount -a
[root@server0 ~]# df -h

案例8:虚拟机 server0操作，扩展逻辑卷

– 将/dev/systemvg/vo逻辑卷的大小扩展到20G
[root@server0 ~]# vgextend systemvg /dev/vdc3
[root@server0 ~]# lvextend -L 20G  /dev/systemvg/vo 
[root@server0 ~]# xfs_growfs /dev/systemvg/vo
[root@server0 ~]# df -h





#################################################



LVM逻辑卷（可以扩展，也可缩小）
　　作用：（1）整合分散的空间；（2）大小可以动态扩大
　　众多物理卷(PV)----组建---->卷组(VG)----划分---->逻辑卷(LV)　
       卷组划分空间的单位：PE    默认１PE=４M
#################################################
1.创建卷组：
　格式：vgcreat 卷组名　设备路径...
     -s：PE大小　
[root@server0 ~]# vgcreate systemvg /dev/vdc[1-2]
[root@server0 ~]# pvs　　＃查看物理卷信息
[root@server0 ~]# vgs   ＃查看卷组信息
################################################
2.创建逻辑卷：
　格式：lvcreate -n .. 　-L .. 　卷组名
　　　 -n : 逻辑卷命名　-Ｌ：逻辑卷大小　－l：PE个数
[root@server0 ~]# lvcreate -n vo -L 16G systemvg
  Logical volume "vo" created
[root@server0 ~]# lvs 　＃查看逻辑卷信息 
[root@server0 ~]# vgs
################################################
3.逻辑卷使用　
　查看逻辑卷设备文件
　格式化，查看文件系统类型，进行自动挂载
　检测，查看已挂载信息
[root@server0 ~]# ls /dev/systemvg/vo 
[root@server0 ~]# mkfs.xfs /dev/systemvg/vo 
[root@server0 ~]# blkid
[root@server0 ~]# mkdir /mylv
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# mount -a
[root@server0 ~]# df -h
################################################
4.逻辑卷的扩展
(1)卷组剩余空间不足
　步骤：扩展卷组空间，扩展逻辑卷，扩展文件系统
[root@server0 ~]# vgextend systemvg /dev/vdc３
[root@server0 ~]# lvextend  -L 25G /dev/systemvg/vo 
[root@server0 ~]# xfs_growfs /dev/systemvg/vo 
[root@server0 ~]# df -h
[root@server0 ~]# lvs
(2)卷组剩余空间足够
　步骤： 扩展逻辑卷，扩展文件系统
　格式：lvextend  -L  ...  逻辑卷
　　　　ext4：　resize2fs　 逻辑卷
　　　　xfs：  xfs_growfs   逻辑卷
[root@server0 ~]# lvextend -L 18G /dev/systemvg/vo
[root@server0 ~]# xfs_growfs /dev/systemvg/vo 
[root@server0 ~]# lvs
[root@server0 ~]# df -h
################################################
5.逻辑卷的删除
lvremove--->vgremove--->pvremove
优先删除逻辑卷，再删除卷组，最后删除物理卷
[root@server0 ~]# umount /mylv/
[root@server0 ~]# lvremove /dev/systemvg/vo 
[root@server0 ~]# vgremove systemvg 
################################################

find高级使用
　格式：find 目录　条件 ...
　-type 类型　(l快捷方式、d目录、f文件)
　-name ＂文档名称＂
　-size +|- 文件大小（k、M、G)
　-user 用户名
　-mtime　根绝文件修改时间　　
　-mtime ＋10＃十天之前修改的数据　　-mtime －10＃最近十天之内修改的数据
find扩展使用
　格式：find 　目录 　条件　 -exec  .. {} .. \;
[root@server0 ~]# find /boot/ -name "vm*" -exec  cp  {} /opt \;
[root@server0 ~]# find /boot/ -size +10M -exec   cp  {} /opt \;

################################################
NTP网络时间同步
1.安装chrony软件包
2.修改/etc/chrony.conf
3.重启chronyd
systemctl restart chronyd
systemctl enable  chronyd  #开机自启

################################################
cron计划任务
　配置文件/etc/crontab
　分　时　日　月　周　　　任务命令行
　＊　＊　＊　＊　＊　　　 ＃每分钟都执行一次
　30　８　＊　＊　1,3,5　  ＃每周一、周三、周五早上８:30执行一次　
   *　*/2　＊　＊　1-5         #周一至周五每隔两小时执行一次
      *：匹配范围任意时间
      ,：分隔不连续时间点
      -：指定连续时间范围
  /n：指定时间频率，每ｎ....
crontab -e -u root  编辑
crontab -l -u root　查看
crontab -r -u root　删除
cat /var/spool/cron/root   #生成的任务文件
　



 



