案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
######################################################

案例1:为虚拟机 server 配置以下永久的静态地址参数
– 主机名:server0.example.com
– IP地址:172.25.0.132
– 子网掩码:255.255.255.0



案例2：复制、粘贴、移动
 以root用户新建/example/目录，在此目录下新建nsd.txt文件，并进一步完成下列操作
 1）将“I love Study”写入到文件nsd.txt 
 2）将nsd.txt重命名为mylove.txt
 3）将/etc/passwd、/boot、/etc/group同时拷贝到/example/目录下
 4）将ifconfig命令的前两行内容，追加写入mylove.txt
 5）将主机名永久配置文件，拷贝到/example/目录下
 6）将DNS永久配置文件，拷贝到/example/目录下
 7）将开机自动挂载配置文件，拷贝到/example/目录下

[root@server0 ~]# mkdir /example
[root@server0 ~]# touch /example/nsd.txt
[root@server0 ~]# vim /example/nsd.txt
[root@server0 ~]# mv /example/nsd.txt  /example/mylove.txt
[root@server0 ~]# cp -r /etc/passwd /boot /etc/group  /example/
[root@server0 ~]# ifconfig | head -2 >> /example/mylove.txt 
[root@server0 ~]# cp /etc/resolv.conf /example/
[root@server0 ~]# cp /etc/fstab /example/

案例3:在server上操作,（MBR分区模式）规划分区
 添加一块80G的硬盘并规划分区：
   划分2个10G的主分区；1个12G的主分区;1个20G的逻辑分区。

案例4:在server上操作,分区使用

1、案例3中新添加80G硬盘的第一个逻辑分区
– 格式化成xfs文件系统，实现该分区开机自动挂载，挂载点为/mnt/xfs

2、案例3中新添加80G硬盘的第一个主分区
– 完成开机自动挂载，挂载点/mnt/mypart,文件系统为ext4

[root@server0 ~]# fdisk /dev/vdc
[root@server0 ~]# mkfs.xfs /dev/vdc5
[root@server0 ~]# mkdir /mnt/xfs
[root@server0 ~]# mkdir /mnt/mypart
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# mkfs.ext4 /dev/vdc1
[root@server0 ~]# mount -a
[root@server0 ~]# lsblk
/etc/fstab　配置格式：设备路径    挂载点         类型       参数      备份标记     检测顺序

案例5:指定yum软件源
为 虚拟机server0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装system-config-kickstart 
– 利用yum仓库安装xeyes
– 运行xeyes命令查看效果
[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo
[root@server0 ~]# yum repolist 
[root@server0 ~]# yum -y install system-config-kickstart
[root@server0 ~]# yum -y install xeyes
[root@server0 ~]# xeyes

案例6: vim文本编辑器练习，命令模式下的基本操作（重点知识）

 1）将/etc/passwd的前20行，写入到文件/opt/pass20.txt 
 2）将/etc/shadow的前10行,追加写入到文件/opt/pass20.txt 

 2）利用/opt/pass20.txt，进项如下操作：
    – 命令模式下移动光标：键盘上下左右键、Home键、End键
    – 命令模式下行间跳转：到全文的第一行（1G或gg）、到全文的最后一行（G）、到全文的第10行（10G）
    
    – 命令模式下复制、粘贴：
    	 复制1行（yy）、复制3行（3yy）
    	 粘贴到当前行之后（小写p）

    – 命令模式下删除：
    	 删除单个字符（x）
    	 删除到行首（d^）、删除到行尾（d$）
    	 删除1行（dd）、删除3行（3dd）
         
    
    – 命令模式下查找关键词： 
    	 搜索（/word）切换结果（n、N）

    – 补充：在命令模式下大写的C，可以删除光标之后，并且进入输入模式

[root@server0 ~]# cat /etc/passwd | head -20 > /opt/pass20.txt
[root@server0 ~]# cat /etc/shadow | head -10 >> /opt/pass20.txt

















###########################################
分区规划及使用
 
  扇区大小默认为512字节

硬盘（块设备）分区管理

一块硬盘的“艺术”之旅
• 识别硬盘 => 分区规划 => 格式化 => 挂载使用
　毛坯楼层 => 打隔断 => 装修 => 入驻

一 识别硬盘
[root@server0 ~]# lsblk 　　　　＃显示当前系统中硬盘
　NAME    　SIZE 　　TYPE 
　vda     　10G 　　 disk 
　└─vda1   10G  　part 
　vdb    　 10G  　　disk 

二 分区规划
     
     分区模式：MBR 主引导记录分区模式
　　• MBR/msdos 分区模式
　　– 1~4个主分区　或者　3个主分区+1个扩展分区(n个逻辑分区)
　　– 最大支持容量为 2.2TB 的磁盘
　　– 扩展分区不能格式化
　　
　　/dev/sda5：该设备标识的含义
　　　　　　　　第一块SCSI接口的设备，第五个分区
　　　　　　　　第一块SCSI接口的设备，第一个逻辑分区


[root@server0 ~]# fdisk  /dev/vdb 
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +1G
  p 查看分区表
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +2G
  d 删除分区
  w 保存并退出    

[root@server0 ~]# lsblk
[root@server0 ~]# ls  /dev/vdb[1-2]

三　格式化:赋予空间文件系统
　　文件系统：数据在空间存储的规则

　　Windows: FAT  NTFS
    Linux:
         RHEL6:ext4
         RHEL7:xfs

• mkfs 工具集
– mkfs.ext3 分区设备路径
– mkfs.ext4 分区设备路径
– mkfs.xfs 分区设备路径
– mkfs.vfat -F 32 分区设备路径

[root@server0 ~]# mkfs.ext4 /dev/vdb1　＃格式化文件系统
[root@server0 ~]# blkid /dev/vdb1   #查看文件系统类型

[root@server0 ~]# mkfs.xfs /dev/vdb2　＃格式化文件系统
[root@server0 ~]# blkid /dev/vdb2　　#查看文件系统类型

四　挂载设备进行使用                            
[root@server0 ~]# mkdir /mypart1
[root@server0 ~]# mount /dev/vdb1 /mypart1
[root@server0 ~]# df -h　　　#显示正在挂载设备的使用情况

[root@server0 ~]# mount /dev/vdb2 /mypart2
mount: 挂载点 /mypart2 不存在

[root@server0 ~]# mkdir /mypart2
[root@server0 ~]# mount /dev/vdb2 /mypart2
[root@server0 ~]# df -h　　　#显示正在挂载设备的使用情况
###################################################
五　永久挂载（开机自动挂载）
实现开机自动挂载
• 配置文件 /etc/fstab 的记录格式
   设备路径    挂载点         类型       参数      备份标记     检测顺序

vim命令模式　按o另起新的一行 进入插入模式

[root@server0 ~]# vim /etc/fstab
 /dev/vdb1 /mypart1  ext4  defaults 0 0
 /dev/vdb2 /mypart2  xfs  defaults 0 0

[root@server0 ~]# umount /mypart1  　#保证当前没有挂载
[root@server0 ~]# umount /mypart2　　#保证当前没有挂载

[root@server0 ~]# df -h
[root@server0 ~]# mount -a
   检测/etc/fstab开机自动挂载配置文件,格式是否正确
   检测/etc/fstab中,书写完成,但当前没有挂载的设备,进行挂载 
[root@server0 ~]# df -h
###################################################
综合分区，/dev/vdb继续分区
最终有3个主分区，分别为1G、2G、2G
   创建扩展分区 --->  两个逻辑分区，分别为1G、1G
[root@server0 ~]# fdisk  /dev/vdb
   p 查看分区表
   n 创建主分区----->回车----->回车---->回车----->在last结束时 +2G
   p 查看分区表
   n 创建扩展分区 
          ----->回车---->起始回车----->结束回车   将所有空间给扩展分区
   p 查看分区表
   n 创建逻辑分区----->起始回车------>结束+1G
   n 创建逻辑分区----->起始回车------>结束+1G
   p 查看分区表
   w 保存并退出
[root@server0 ~]# partprobe   #刷新分区表
[root@server0 ~]# lsblk 
#####################################################
总结：
1.识别硬盘　lsblk
2.分区规划    fdisk
3.刷新分区表　　partprobe
4.进行格式化　　mkfs.xfs  mkfs.ext4   blkid
5.挂载使用　mount  /etc/fstab开机自动挂载   mount -a  df -h
####################################################

































