iSCSI服务基础

iSCSI磁盘的工作模式(默认端口:3260)
• Internet SCSI,网际SCSI接口
– 一种基于C/S架构的虚拟磁盘技术
– 服务器提供磁盘空间,客户机连接并当成本地磁盘使用

• backstore,后端存储
– 对应到服务端提供实际存储空间的设备,需要起一个管理名称

• target,磁盘组(木质的箱子)
– 是客户端的访问目标,作为一个框架,由多个lun组成

• lun,逻辑单元(将后端存储放入磁盘组)
– 每一个lun需要关联到某一个后端存储设备,在客户端
会视为一块虚拟硬盘

   /dev/vdb1 (backstore,后端存储)
  
      大冰箱---->纸质的包装      木质的箱子

• ISCSI Qualified Name(iqn) 名称规范
– iqn.yyyy-mm.倒序域名:自定义标识
– 用来识别 target 磁盘组,也用来识别客户机身份

• 名称示例
– iqn.2016-02.com.example:server0
– iqn.2016-02.com.example:desktop0


服务端:虚拟机server 提供磁盘空间

一 所需软件包:targetcli(服务端软件)
[root@server0 ~]# yum -y install targetcli

二 运行targetcli进行配置
[root@server0 ~]# targetcli

 1)创建后端存储(backstore,后端存储)
   /> backstores/block  create  name=nsd dev=/dev/vdb1

 2)创建target,磁盘组(木质的箱子)
[root@server0 ~]# targetcli
   /> iscsi/ create iqn.2019-04.com.example:server0

 3)配置lun,关联(将后端存储放入磁盘组)
   /> iscsi/iqn.2019-04.com.example:server0/tpg1/luns     create /backstores/block/nsd 

  4)配置ACL访问控制,设置客户端声称的名字
/> iscsi/iqn.2019-04.com.example:server0/tpg1/acls create iqn.2019-04.com.example:desktop0

  5)设置本机提供服务端的IP地址与端口
 /> iscsi/iqn.2019-04.com.example:server0/tpg1/portals create   172.25.0.11

   /> exit   #保存并退出


客户端:虚拟机desktop 访问使用服务端提供磁盘空间
一 安装客户端软件
• 所需软件包:iscsi-initiator-utils
[root@desktop0 ~]# yum -y install  iscs(tab)

二 修改配置文件,指定客户端生成的命令
[root@desktop0 ~]# vim /etc/iscsi/initiatorname.iscsi 
InitiatorName=iqn.2019-04.com.example:desktop0

三 重启iscsid服务,用于识别客户端声称的名字
[root@desktop0 ~]# systemctl restart iscsid
  Warning: Unit file of iscsid.service changed on  
  disk, 'systemctl daemon-reload' recommended.
[root@desktop0 ~]# systemctl daemon-reload
[root@desktop0 ~]# systemctl restart iscsid

四  运行iscsiadm命令,发现服务端共享存储
  Linux查看命令帮助的方法 :  man  iscsiadm 
   全文查找/example   按n项下跳转匹配,看到EXAMPLES

]# iscsiadm --mode discoverydb --type sendtargets --portal 172.25.0.11 --discover

屏幕显示信息:
172.25.0.11:3260,1 iqn.2019-04.com.example:server0

五 重启iscsi服务(客户端服务),加载服务端共享存储

[root@desktop0 ~]# systemctl restart iscsi
[root@desktop0 ~]# systemctl enable iscsi
[root@desktop0 ~]# lsblk 

###############################################################################################

一 部署mariadb数据库服务器(默认的端口 3306)
   mariadb-server:提供服务端有关的系统程序

[root@server0 ~]# yum -y install mariadb-server
[root@server0 ~]# systemctl restart mariadb

二 数据库的基本操作
[root@server0 ~]# mysql        #进入数据库,默认无需密码
1.
show 查看 
create　创建
drop　删除

2.设置用户密码
mysqladmin -u 用户  -p　旧密码　 password '密码'　
登陆
mysql -u 用户　-p　　　
mysql -u 用户　-p密码

3.进入库
use 库名
查看库中表格
show tables
查看表结构
desc 表名

4.数据库授权
grant  权限列表　on 数据库名.表名　to　用户名＠客户机地址   identified by　＇密码＇;

5.数据库的导入操作
• 导入/恢复到数据库
]# wget http://classroom.example.com/pub/materials/users.sql
]# ls
导入数据到指定数据库:
]# mysql -u root -p123 nsd1903 < /root/users.sql 

有多少人的姓名是 Barbara 同时居住在 Sunnyvale?
> select count(*) from base,location         
  where base.name='Barbara' and 
  location.city='Sunnyvale' and base.id=location.id; 

> insert base values('6','Barbara','789'); #插入表记录



##############################################################
案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
######################################################


案例1:在在 server0、desktop0 上操作
– 将防火墙默认区域设置为trusted
[root@server0 ~]# firewall-cmd --set-default-zone=trusted
success
[root@server0 ~]# firewall-cmd --get-default-zone
trusted

案例2:指定yum软件源
为 server0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装system-config-kickstart 
[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo
[root@server0 ~]# yum repolist
[root@server0 ~]# yum -y install system-config-kickstart


案例3:tar制作/释放归档压缩包（zcf、ztf、zxf、jcf、jtf、jxf、cf、tf）
  首先创建/root/boothome/与/root/usrsbin/目录
    1）备份/boot、/home这两个文件夹，保存为boothome.tar.gz文件
    2）查看boothome.tar.gz文件内包含哪些内容 
    3）将boothome.tar.gz释放到文件夹/root/boothome/下
    4）备份/usr/sbin目录，保存为usrsbin.tar.bz2文件
    5）查看usrsbin.tar.bz2文件内包含哪些内容
    6）将usrsbin.tar.bz2释放到/root/usrsbin/文件夹下
[root@server0 ~]# mkdir /root/boothome /root/usrsbin
[root@server0 ~]# tar -zcf /root/boothome.tar.gz /boot/ /home/
[root@server0 ~]# tar -tf /root/boothome.tar.gz
[root@server0 ~]# tar -xf /root/boothome.tar.gz  -C /root/boothome
[root@server0 ~]# tar -jcf /root/usrsbin.tar.bz2  /usr/sbin/
[root@server0 ~]# tar -tf /root/usrsbin.tar.bz2 
[root@server0 ~]# tar -xf /root/usrsbin.tar.bz2 -C /root/usrsbin

案例4:在server上操作，搭建mariadb数据库系统
1. 在 server0 上安装 MariaDB 数据库系统
1)安装 mariadb-server软件包
2)启动 mariadb 服务
[root@server0 ~]# yum -y install mariadb-server
[root@server0 ~]# systemctl restart mariadb


案例5:在server上操作，配置一个数据库
– 为mariadb数据库root设置登陆密码为 haxi
– 新建一个数据库名为 nsd
– 除了 root 用户,此数据库只能被用户 lisi 查询,此用户的密码为 123(用户的授权)
– 数据库 nsd 中应该包含来自数据库复制的内容,(数据库导入数据)
数据库文件的 URL为:http://classroom/pub/materials/users.sql
[root@server0 ~]# mysqladmin -u root password 'haxi';
[root@server0 ~]# mysql -u root -phaxi;
MariaDB [(none)]> create database nsd;
MariaDB [(none)]> exit
[root@server0 ~]# wget http://classroom/pub/materials/users.sql
[root@server0 ~]# mysql -u root -phaxi nsd < /root/users.sql 
MariaDB [nsd]> grant select on nsd.* to lisi@localhost identified by '123';

案例6:在server上操作，使用数据库查询

1)查询base表所有内容
2)查询location表所有内容
3)查询base表的结构
4)查询location表的结构
5)查询base表内容,只显示name字段
6)查询mysql表内容,只显示user,host,password字段
7)密码是 solicitous 的人的名字?
8)有多少人的姓名是 Barbara 同时居住在 Sunnyvale?
9)在base表中追加记录  id为6，name为Barbara，password为900
10)在location表中追加记录  id为6，city为Sunnyvale
11)再次查询有多少人的姓名是 Barbara 同时居住在 Sunnyvale?
MariaDB [nsd]> show tables;
MariaDB [nsd]> select * from base;
MariaDB [nsd]> select * from location;
MariaDB [nsd]> desc base;
MariaDB [nsd]> desc location;
MariaDB [nsd]> select name from base;
MariaDB [nsd]> select name from base where password='solicitous';
MariaDB [nsd]> select count(*) from base,location where base.name='barbara' and location.city='sunnyvale' and base.id=location.id;    1
MariaDB [nsd]> insert base values('6','barbara','900');
MariaDB [nsd]> insert location values('6','sunnyvale');
MariaDB [nsd]> select count(*) from base,location where base.name='barbara' and location.city='sunnyvale' and base.id=location.id;     2

案例7:虚拟机 server0操作， /dev/vdb 上按以下要求建立分区：

采用默认的 msdos 分区模式 
– 第1个分区 /dev/vdb1 的大小为 3G
– 第2个分区 /dev/vdb2 的大小为 200M
– 第3个分区 /dev/vdb3 的大小为 100M
– 第4个分区 /dev/vdb4为扩展分区
– 在划分三个分区逻辑分区/dev/vdb[5-6]，
– 分区大小依次为500M、2000M
[root@server0 ~]# fdisk /dev/vdb
[root@server0 ~]# partprobe
[root@server0 ~]# lsblk
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda    253:0    0   10G  0 disk 
└─vda1 253:1    0   10G  0 part /
vdb    253:16   0   10G  0 disk 
├─vdb1 253:17   0    3G  0 part 
├─vdb2 253:18   0  200M  0 part 
├─vdb3 253:19   0  100M  0 part 
├─vdb4 253:20   0    1K  0 part 
├─vdb5 253:21   0  500M  0 part 
└─vdb6 253:22   0    2G  0 part 

案例8：发布iSCSI网络磁盘

 1）配置 server0 提供 iSCSI 服务，要求如下：
 2）磁盘名为iqn.2016-02.com.example:server0
 3）服务端口为 3260
 4）使用 iscsi_store（后端存储的名称） 作其后端卷，其大小为 3GiB
 5）此磁盘服务只能被 desktop0.example.com 访问，在Server0上配置客户端ACL为iqn.2016-02.com.example:desktop0
 6）配置虚拟机desktop0 使用 虚拟机server0 提供 iSCSI 服务
[root@server0 ~]# firewall-cmd --set-default-zone=trusted
[root@server0 ~]# yum -y install targetcli
[root@server0 ~]# targetcli
/> /backstores/block  create name=iscsi_store dev=/dev/vdb1
/> iscsi/ create iqn.2016-02.com.example:server0
/> iscsi/iqn.2016-02.com.example:server0/tpg1/luns  create /backstores/block/iscsi_store
/> iscsi/iqn.2016-02.com.example:server0/tpg1/acls  create iqn.2016-02.com.example:desktop0
/> iscsi/iqn.2016-02.com.example:server0/tpg1/portals  create 172.25.0.11
/> exit
[root@server0 ~]# systemctl  restart  target
[root@server0 ~]# systemctl  enable  target
[root@desktop0 ~]# yum -y install iscsi-initiator-utils
[root@desktop0 ~]# vim /etc/iscsi/initiatorname.iscsi 
[root@desktop0 ~]# systemctl restart  iscsid
[root@desktop0 ~]# man iscsiadm
[root@desktop0 ~]# iscsiadm --mode discoverydb --type sendtargets --portal 172.25.0.11 --discover
[root@desktop0 ~]# systemctl  restart  iscsi
[root@desktop0 ~]# systemctl  enable  iscsi
[root@desktop0 ~]# lsblk
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda      8:0    0   3G  0 disk 
vda    253:0    0  10G  0 disk 
└─vda1 253:1    0  10G  0 part /
vdb    253:16   0  10G  0 disk 
























